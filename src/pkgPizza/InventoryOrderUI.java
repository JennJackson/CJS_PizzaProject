/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InventoryOrderUI.java
 *
 * Created on Oct 5, 2011, 8:34:02 AM
 */

package pkgPizza;

import java.sql.*;
import java.util.*;
import java.awt.PrintJob;
import java.awt.Component;
import javax.swing.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class InventoryOrderUI extends javax.swing.JFrame
{

private Component frame;

    private static Connection conn = DBSingle.getConn().getConnection();

    /** Creates new form InventoryOrderUI */
    public InventoryOrderUI() {
        initComponents();
        fillIngredientToOrder();

    }
    



    public void close()
    {
        this.dispose();
    }

    public void printTextArea()
    {

    }

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackgroundColor = new javax.swing.JPanel();
        btnAddToOrder = new javax.swing.JButton();
        btnSubmitOrder = new javax.swing.JButton();
        lblPwd = new javax.swing.JLabel();
        javax.swing.JLabel lblEmpID = new javax.swing.JLabel();
        lblSubHeading = new javax.swing.JLabel();
        lblHeading = new javax.swing.JLabel();
        pnlGreenStripe = new javax.swing.JPanel();
        pnlBlueStripe = new javax.swing.JPanel();
        lblPizzajpg = new javax.swing.JLabel();
        cmbIngredientToOrder = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOrderInfo = new javax.swing.JTextArea();
        btnClear = new javax.swing.JButton();
        txtQuantity = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuMenu = new javax.swing.JMenu();
        mnuMainMenu = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBackgroundColor.setBackground(new java.awt.Color(249, 238, 205));

        btnAddToOrder.setFont(new java.awt.Font("Garamond", 0, 18));
        btnAddToOrder.setText("Add Item/Qty to Order");
        btnAddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToOrderActionPerformed(evt);
            }
        });

        btnSubmitOrder.setFont(new java.awt.Font("Garamond", 0, 18));
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        lblPwd.setFont(new java.awt.Font("Garamond", 1, 18));
        lblPwd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPwd.setText("Quantity to Order");

        lblEmpID.setFont(new java.awt.Font("Garamond", 1, 18));
        lblEmpID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmpID.setText("Item to Order");

        lblSubHeading.setFont(new java.awt.Font("Garamond", 1, 18));
        lblSubHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubHeading.setText("Product Re-Order");

        lblHeading.setFont(new java.awt.Font("Garamond", 1, 24));
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("CJS Pizza");

        pnlGreenStripe.setBackground(new java.awt.Color(0, 153, 0));
        pnlGreenStripe.setAlignmentY(0.4F);
        pnlGreenStripe.setPreferredSize(new java.awt.Dimension(420, 30));
        pnlGreenStripe.setRequestFocusEnabled(false);

        javax.swing.GroupLayout pnlGreenStripeLayout = new javax.swing.GroupLayout(pnlGreenStripe);
        pnlGreenStripe.setLayout(pnlGreenStripeLayout);
        pnlGreenStripeLayout.setHorizontalGroup(
            pnlGreenStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1283, Short.MAX_VALUE)
        );
        pnlGreenStripeLayout.setVerticalGroup(
            pnlGreenStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        pnlBlueStripe.setBackground(new java.awt.Color(0, 0, 141));
        pnlBlueStripe.setAlignmentX(0.0F);
        pnlBlueStripe.setAlignmentY(0.0F);
        pnlBlueStripe.setFocusable(false);
        pnlBlueStripe.setPreferredSize(new java.awt.Dimension(590, 30));

        javax.swing.GroupLayout pnlBlueStripeLayout = new javax.swing.GroupLayout(pnlBlueStripe);
        pnlBlueStripe.setLayout(pnlBlueStripeLayout);
        pnlBlueStripeLayout.setHorizontalGroup(
            pnlBlueStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1283, Short.MAX_VALUE)
        );
        pnlBlueStripeLayout.setVerticalGroup(
            pnlBlueStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        lblPizzajpg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkgPizza/tomato_pizza.jpg"))); // NOI18N
        lblPizzajpg.setText("lblPizzaPic");
        lblPizzajpg.setAlignmentY(0.0F);
        lblPizzajpg.setFocusable(false);
        lblPizzajpg.setIconTextGap(0);
        lblPizzajpg.setInheritsPopupMenu(false);

        cmbIngredientToOrder.setFont(new java.awt.Font("Garamond", 0, 18));
        cmbIngredientToOrder.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbIngredientToOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbIngredientToOrder.setName("Select Ingredient to Order"); // NOI18N
        cmbIngredientToOrder.setRequestFocusEnabled(false);
        cmbIngredientToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIngredientToOrderActionPerformed(evt);
            }
        });

        txtOrderInfo.setColumns(20);
        txtOrderInfo.setFont(new java.awt.Font("Garamond", 0, 18));
        txtOrderInfo.setRows(5);
        jScrollPane1.setViewportView(txtOrderInfo);

        btnClear.setFont(new java.awt.Font("Garamond", 0, 18));
        btnClear.setText("Clear Order");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtQuantity.setFont(new java.awt.Font("Garamond", 0, 18));

        javax.swing.GroupLayout pnlBackgroundColorLayout = new javax.swing.GroupLayout(pnlBackgroundColor);
        pnlBackgroundColor.setLayout(pnlBackgroundColorLayout);
        pnlBackgroundColorLayout.setHorizontalGroup(
            pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addComponent(lblPizzajpg, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlGreenStripe, javax.swing.GroupLayout.DEFAULT_SIZE, 1283, Short.MAX_VALUE)
                    .addComponent(pnlBlueStripe, javax.swing.GroupLayout.DEFAULT_SIZE, 1283, Short.MAX_VALUE)))
            .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 1356, Short.MAX_VALUE)
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSubHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 1336, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 536, Short.MAX_VALUE)
                .addComponent(lblPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(271, 271, 271))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundColorLayout.createSequentialGroup()
                .addGap(433, 433, 433)
                .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addGap(161, 161, 161)
                .addComponent(btnSubmitOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addGap(451, 451, 451))
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(cmbIngredientToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 544, Short.MAX_VALUE)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(321, 321, 321))
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addGap(546, 546, 546)
                .addComponent(btnAddToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(552, Short.MAX_VALUE))
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addGap(419, 419, 419)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );
        pnlBackgroundColorLayout.setVerticalGroup(
            pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundColorLayout.createSequentialGroup()
                .addGroup(pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBackgroundColorLayout.createSequentialGroup()
                        .addComponent(pnlBlueStripe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(pnlGreenStripe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPizzajpg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubHeading)
                .addGap(39, 39, 39)
                .addGroup(pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPwd))
                .addGap(11, 11, 11)
                .addGroup(pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbIngredientToOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(btnAddToOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(pnlBackgroundColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSubmitOrder))
                .addGap(81, 81, 81))
        );

        lblPwd.getAccessibleContext().setAccessibleName("Quantity to Order\\n\nhjkllkjgf");

        mnuMenu.setText("File");
        mnuMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMenuActionPerformed(evt);
            }
        });

        mnuMainMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        mnuMainMenu.setText("Main Menu");
        mnuMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuMainMenuActionPerformed(evt);
            }
        });
        mnuMenu.add(mnuMainMenu);

        mnuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuMenu.add(mnuExit);

        jMenuBar1.add(mnuMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackgroundColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackgroundColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToOrderActionPerformed

    
        String addToOrder;

        String InvOrderID;
        String IngrID;
        String spaces = "";
        int currLength;
        int length;

        Ingredients myIngredients = new Ingredients();
        myIngredients = (Ingredients) cmbIngredientToOrder.getSelectedItem();
        addToOrder = myIngredients.toString();
        currLength = addToOrder.length();
        

        for (int z = currLength; z <= 20; z++)
        {
            spaces = spaces + " ";
        }

        qtyToOrder = Integer.parseInt(txtQuantity.getText());
        orderIngred = String.valueOf(myIngredients.getId());
        txtOrderInfo.append(addToOrder);
        txtOrderInfo.append(spaces + qtyToOrder + "\n");

        ingred.add(orderIngred);
        orderQTY.add(qtyToOrder);
        
        
        txtQuantity.setText("");
        cmbIngredientToOrder.setSelectedIndex(0);
        
}//GEN-LAST:event_btnAddToOrderActionPerformed




    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed
            int invID;
            int length;

            try
            {
                //establish connection and insert record into inventory_orders table
               Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
               stmt.executeUpdate("insert into inventory_orders (InvOrderDate, Open) VALUES (NOW(),1);");

                //query inventory_orders table for the orner number
                stmt.executeQuery("SELECT max(InventoryOrder_ID) Maxi FROM inventory_orders;");
                
                ResultSet rs3 = stmt.getResultSet();
                rs3.first();
                invID = rs3.getInt("Maxi");
                
                //get length of array
                length = ingred.size();

                //loop thru inserting a record from 1 to array length for
                String strQ;
                String strQuery;
                for(int z = 0 ; z < length; z++)
                {
                    strQ = "insert into inventory_orderline (InventoryOrder_ID, Ingredients_ID, QtyOrdered)";
                    strQ = strQ + " values ('" + invID + "','" + ingred.get(z) + "','" + orderQTY.get(z) + "')";
                    stmt.executeUpdate(strQ);
                    strQuery = "UPDATE Ingredients SET OnOrder = OnOrder + " + orderQTY.get(z) + " WHERE Ingredients_ID = " + ingred.get(z);
                    stmt.executeUpdate(strQuery);
                } // end for loop
                JOptionPane.showMessageDialog(frame,
                "Order Submitted.");
            } // end try
            catch (SQLException ex)
            {
                System.out.println(ex.getMessage());
            }
            
            txtOrderInfo.setText("");
            


}//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void cmbIngredientToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIngredientToOrderActionPerformed
        if( cmbIngredientToOrder.getSelectedIndex() >= 0)
        {
            try
            {
            Ingredients myIngredients = new Ingredients();
            myIngredients = (Ingredients) cmbIngredientToOrder.getSelectedItem();
            }
            catch(Exception ex)
            {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_cmbIngredientToOrderActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //clear textfield
        txtQuantity.setText(null);
        //clear text area
        txtOrderInfo.setText(null);
        //reset dropdown
        cmbIngredientToOrder.setSelectedIndex(0);
        cmbIngredientToOrder.hasFocus();
        //clear the arrays
        ingred.clear();
        orderQTY.clear();

    }//GEN-LAST:event_btnClearActionPerformed

    private void mnuMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMenuActionPerformed

    }//GEN-LAST:event_mnuMenuActionPerformed

    private void mnuMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuMainMenuActionPerformed
        ingred.clear();
        orderQTY.clear();
        this.dispose();
        MainMenuUI mainMenu = new MainMenuUI();
        mainMenu.enableButtons();
        mainMenu.setVisible(true);
    }//GEN-LAST:event_mnuMainMenuActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        int result = JOptionPane.showConfirmDialog(
    frame,
    "Are you sure you want to exit?",
    "CJS Software Solutions",
    JOptionPane.YES_NO_OPTION);
    if (result == JOptionPane.YES_OPTION) {
        System.exit(0);
    }           
    }//GEN-LAST:event_mnuExitActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new InventoryOrderUI().setVisible(true);                
            }
        });
    }
 
    
    public void fillIngredientToOrder()
    {
        String strIngredientsList;

        try
        {
           Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
           stmt.executeQuery("SELECT * FROM Ingredients WHERE Active = true");
           ResultSet rs1 = stmt.getResultSet();

           cmbIngredientToOrder.removeAllItems();
            
           while(rs1.next())
           {
               Ingredients myIngredients = new Ingredients();
               myIngredients.setId(Integer.parseInt(rs1.getString("Ingredients_ID")));
               strIngredientsList = rs1.getString("Description");
               myIngredients.setDescription(rs1.getString("Description"));
               
               cmbIngredientToOrder.addItem(myIngredients);
           }
           cmbIngredientToOrder.setSelectedIndex(0);

        }
        catch (SQLException ex)
        {

        }
    }

    String orderIngred;
    int qtyToOrder;
    ArrayList ingred = new ArrayList();
    ArrayList orderQTY = new ArrayList();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToOrder;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JComboBox cmbIngredientToOrder;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblPizzajpg;
    private javax.swing.JLabel lblPwd;
    private javax.swing.JLabel lblSubHeading;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuMainMenu;
    private javax.swing.JMenu mnuMenu;
    private javax.swing.JPanel pnlBackgroundColor;
    private javax.swing.JPanel pnlBlueStripe;
    private javax.swing.JPanel pnlGreenStripe;
    private javax.swing.JTextArea txtOrderInfo;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

}
